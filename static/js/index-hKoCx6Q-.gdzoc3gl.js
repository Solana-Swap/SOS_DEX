import{a7 as c,cN as h,I as d,bT as m}from"./Bridge.l6xugmfj.js";import{S as p}from"./sui-BTljusIV.h19joj0i.js";import"./index.ehffodxd.js";import"./vue.fv0erkdm.js";import"./lodash-es.bp0zmem9.js";import"./axios.i01mok01.js";import"./dayjs.pb8a0t5b.js";import"./vuex.jdzbw26m.js";import"./vue-router.jwqkmej7.js";import"./svg-icons.nw66rbkj.js";import"./pbkdf2-GOwpKNWv.ozw8os1f.js";var w=Object.defineProperty,l=(i,e,t)=>e in i?w(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,n=(i,e,t)=>l(i,typeof e!="symbol"?e+"":e,t);class a{constructor(e,t,o,s){n(this,"network"),n(this,"chain"),n(this,"provider"),n(this,"contracts"),n(this,"chainId"),n(this,"coreBridgePackageId"),this.network=e,this.chain=t,this.provider=o,this.contracts=s,this.chainId=c(t);const r=s.coreBridge;if(!r)throw new Error(`CoreBridge contract Address for chain ${t} not found`);this.coreBridgePackageId=r}getGuardianSet(e){throw new Error("Method not implemented.")}getMessageFee(){throw new Error("Method not implemented.")}static async fromRpc(e,t){const[o,s]=await p.chainFromRpc(e),r=t[s];if(r.network!==o)throw new Error(`Network mismatch: ${r.network} !== ${o}`);return new a(o,s,e,r.contracts)}async*verifyMessage(e,t){throw new Error("Method not implemented.")}async*publishMessage(e,t){throw new Error("Method not implemented.")}async parseTransaction(e){return(await this.parseMessages(e)).map(t=>({emitter:t.emitterAddress,sequence:t.sequence,chain:this.chain}))}async getGuardianSetIndex(){throw new Error("Method not implemented.")}async parseMessages(e){var t;const o=(t=(await this.provider.getTransactionBlock({digest:e,options:{showEvents:!0,showEffects:!0,showInput:!0}})).events)==null?void 0:t.filter(s=>s.type.endsWith("WormholeMessage"));if(!o||o.length==0)throw new Error("WormholeMessage not found");return o.map(s=>{const r=s.parsedJson;return h("Uint8Array",{emitterChain:this.chain,emitterAddress:new d(r.sender).toUniversalAddress(),sequence:BigInt(r.sequence),guardianSet:0,timestamp:Number(r.timestamp),consistencyLevel:r.consistency_level,nonce:r.nonce,signatures:[],payload:new Uint8Array(r.payload)})})}}m("Sui","WormholeCore",a);export{a as SuiWormholeCore};
